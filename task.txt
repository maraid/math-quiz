Követelmények:
SSADM terv készítése és az alkalmazás megvalósítása.
Példa: honfoglalo.hu

Követelmények:
	
	Egy fős csapatoknak:
		1. Felhasználók kezelése
		2. Kérdések, válaszok
		3. Helyes és rossz válaszok kérdésekre
		4. Pontszámítási rendszer
		5. Ranglista
		6. Statisztika számítás pontok és korosztályra vonatkozóan.

	Két fős csapatoknak:
		7. Játékos szobák létrehozása.
		8. Kérdés témakörök (egy kérdés több témakörben is szerepelhet)
		9. Nehézségi szintek (triggerrel is lehet a kérdésekre külön-külön állítani a statisztikák alapján)
		10. Statisztika készítése, hogy ki milyen témakörben adott jó válaszokat.
		11. Összesített ranglista készítése nehézségi szintek figyelembevételével.

MongoDB
  Collections:
	- User:
	  {
	    "_id": "asd54asg",
		"username": "kiskacsa",
		"password": "H32as5d4aSAas65ga43",
		"agegroup": 5,  // 1=0-9, 2=10-17, 3=18-30, 4=31-50, 5=50+
		"answers": [
		             {
		               "_id": "5asd46a84d",  // question id
				       "iscorrect": true,
					   "won": true
				     },
					 {
		               "_id": "5a564f564ag",
				       "iscorrect": false,
					   "won": false
				     },
					 {
		               "_id": "654a5fga1ag3",  // question id
				       "iscorrect": true,
					   "won": false  // helyes válasz, de nem nyert kört
				     }
				   ],
		"score": {
				   "easy": 513.4,
				   "medium": 6845.8,
				   "hard": 231354.0 
				 }
	  }
	- Question -- Answer
	  {
		"_id": "5asd46a84d",
		"question": "Melyik a kedvenc wow karaktered?".
		"answers": ["Correct", "False", "False", "False"],
		"difficulty": 1  // [1, 2, 3],
		"tags": ["sport", "arts"]
	  }
	- Games:  // nem fontos
	  {
	    "_id": "asda64465sdg53",
		"datetime": "2009-06-15T13:45:30",
		"users": ["kiskacsa", "nagypista", "asd", "foo"],
		"questions": ["5asd46a84d", "asd6645a5g46", ...]  // 10db pl
	  }

Pontszámítás:
  súlyozás nehézség alapján. 1: 1.0, 2: 1.3, 3: 1.6
  súlyozva tároljuk a dbben
  
10. feladat statisztika témakörökre
  - csak a felhasználó saját válaszai
  
DB: MongoDB
Backend: NodeJS
Frontend: HTML + JavaScript
backend -- frontend: comet (vagy websocket)

#2
4 művelet: + - * /
3 nehézség: 1-10 11-100 101-1000
minden nehézségnél minden műveletre 10 különböző feladat generálása

bónusz: sok számjegyű törtszámok melyik a legnagyobb/legkisebb
nehézségi szintek: mekkora az eltérés a számláló és nevező között

ejs-template

demora:
-kérdések legenerálva
-felhasználók ffelvéve
-látványterv (simmple login + főoldal pár statikus szobával)
-git repo

screen:
1: login: üres, csak egy login form
2: menüsor felül: minden oldalra egy lnk
3: főoldal: szobák listáááááááája
4: felhasználó statisztikája
5: globális statisztika
6: help: hogy kell használni, feladatunk leírása


